org-mode 入门教程

* 章节
org-mode 用 * 标识章节，一个 * 代表一级标题，两个 * 代表两级标题，以此类推。注意星号后面有空格。

| key            | 作用                                  |
|----------------+---------------------------------------|
| Tab            | 对光标所在章节进行展开、折叠          |
| S-Tab          | 展开、折叠所有章节                    |
| M-left/right   | 升级/降级标题，不包含子项             |
| M-S-left/right | 升级/降级标题，包含子项               |
| M-up/dowm      | 上下移动章节                          |
| M-S-up/down    | 将当前章节和它的子章节向上/下移动     |
|                | （和相同的缩进的前/后一个项交换位置） |

** 移动
下面的命令可以跳转到缓冲区其他的标题。
| key     | 作用           |
|---------+----------------|
| C-c C-n | 下个标题       |
| C-c C-p | 上个标题       |
| C-c C-f | 下个同级的标题 |
| C-c C-b | 上个同级的标题 |
| C-c C-u | 回到上层标题   |

* 列表
列表是文本中一个比较常用的元素，可以列出各种待完成的事项等。
Org 能够识别有序列表、无序列表和描述列表。
无序列表项以 '-'、'+' 或者 '*' 开头。
有序列表项以 '1.'、'1)' 开头。
描述列表用 '::' 将项和描述分开。

| key       | 作用                                           |
|-----------+------------------------------------------------|
| M-RET     | 插入同级列表项                                 |
| M-S-RET   | 插入有复选框(checkbox)的同级列表项             |
| C-c C-c   | 如果项中有复先框(checkbox)，就触发改变其状态， |
|           | 并且自动保持本项的符号与缩进在列表中的一致性   |
| C-c -     | 循环改变将当前列表的项标志符号                 |
| M-left    | 改变列表项层级关系，不包含子项                 |
| M-right   | 改变列表项层级关系，不包含子项                 |
| M-S-left  | 改变列表项层级关系，包含子项                   |
| M-S-right | 改变列表项层级关系，包含子项                   |
| M-up/dowm | 上下移动列表项                                 |
| M-S-up    |                                                |
| M-S-down  | 将当前项和它的子项向上/下移动。                |
|           | 和相同的缩进的前/后一个项交换位置。            |
|           | 如果列表是有序的，数字会自动改变               |

* 表格
Org 提供了快速易用的 ASCII 文本表格编辑功能。表格常用于数据展示。
任何以 '|' 为首个非空字符的行都会被认为是表格的一部分。'|' 也是列分隔符。
以’|-’开头的一行会作为一个水平分隔行。
当你在表格内部输入 TAB、RET 或者 C-c C-c 时表格都会自动调整。
其实用|Name|Phone|Age C-c RET 来建表会更简单一点。

** 创建和转换
C-c | 通过输入大小的方式插入表格

** 调整和区域移动
| key     | 作用                                               |
|---------+----------------------------------------------------|
| C-c C-c | 对齐表格，不移动光标                               |
| TAB     | 将光标移到下一个区域，并对齐表格；                 |
|         | 必要时新建一行（如果位于最右边，则创建一个新的行） |
| S-TAB   | 调整表格，将光标移到上一个区域                     |
| RET     | 将光标移到下一行，必要时会新建一行                 |

** 编辑行和列
| key          | 作用                                                     |
|--------------+----------------------------------------------------------|
| M-left/right | 左/右移当前列                                            |
| M-S-left     | 删除当前列                                               |
| M-S-right    | 在光标位置左边添加一列                                   |
| M-up/down    | 上/下移当前行                                            |
| M-S-up       | 删除当前行                                               |
| M-S-down     | 在当前行上面添加一行。如果有前缀，则在下面添加一行       |
| C-c -        | 在当前行下面添加一个水平线。                             |
|              | 如果带前缀，则在上面添加一行水平线                       |
| C-c RET      | 在当前行下面添加一行。并将光标移动到下一行               |
| C-c ^        | 将表排序。当前位置所在的列作为排序的依据。               |
|              | 排序在距当前位置最近的两个水平线之间的行或者整个表中进行 |

* 脚注
脚注就是以脚注定义符号开头的一段话，脚注定义符号是将脚注名称放在一个方括号里形成的，要求放在第 0 列，
不能有缩进。而引用就是在正文中将脚注名称用方括号括起来。

| key       | 作用                                                           |
|-----------+----------------------------------------------------------------|
| C-c C-x f | 这是一个移动命令。                                             |
|           | 当光标处理引用处时，跳转到它的定义；                           |
|           | 当光标处理定义处时，跳转到第一个引用处；                       |
|           | 其他情况下，新建一个脚注。                                     |
|           | 当有前缀时，会提供一个菜单供选择操作，其中包括重新给脚注编号。 |
| C-c C-c   | 在定义和引用之间跳转                                           |

* 链接
就像 HTML 一样，Org 也提供了文件的内部链接，以及到其他文件、新闻组、电子邮件的外部链接等链接格式。

** 链接格式
Org 能够识别 URL 格式的文本并将它们处理成可点击的链接。通常链接格式是这样的：
#+BEGIN_SRC org
[[link][description]] 或者 [[link]]
#+END_SRC

链接输入一旦完成（所有的括号都匹配），Org 就会改变它的视图。
这里会看到 “description” 和 “link” ，而不是
#+BEGIN_SRC org
[[link][descriptoin]]
#+END_SRC
和
#+BEGIN_SRC org
[[link]]
#+END_SRC

要想编辑链接，可以光标置于链接上并键入 C-c C-l。

** 内部链接
如果一个链接地址并不是 URL 的形式，就会作为当前文件内部链接来处理。最重要的一个例子是
#+BEGIN_SRC org
[[#my-custom-id]]
#+END_SRC
它会链接到 CUSTOM_ID 属性是 “my-custom-id” 的项。
类似
#+BEGIN_SRC org
[[My Target]]
#+END_SRC
和
#+BEGIN_SRC org
[[My Target][Find my target]]
#+END_SRC
的链接，点击后本文件中查找对应的目标 “<<My Target>>” 。

** 外部链接
Org 支持的链接格式包括文件、网页、新闻组、BBDB 数据库项、IRC 会话和记录。
外部链接是 URL 格式的定位器。以识别符开头，后面跟着一个冒号，冒号后面不能有空格。下面是一些例子：

http://www.astro.uva.nl/~dominik            on the web
file:/home/dominik/images/jupiter.jpg       file, absolute path
/home/dominik/images/jupiter.jpg            same as above
file:papers/last.pdf                        file, relative path
file:projects.org                           another Org file
docview:papers/last.pdf::NNN                open file in doc-view mode at page NNN
id:B7423F4D-2E8A-471B-8810-C40F074717E9     Link to heading by ID
news:comp.emacs                             Usenet link
mailto:adent@galaxy.net                     Mail link
vm:folder                                   VM folder link
vm:folder#id                                VM message link
wl:folder#id                                WANDERLUST message link
mhe:folder#id                               MH-E message link
rmail:folder#id                             RMAIL message link
gnus:group#id                               Gnus article link
bbdb:R.*Stallman                            BBDB link (with regexp)
irc:/irc.com/#emacs/bob                     IRC link
info:org:External%20links                   Info node link (with encoded space)

链接的括号应当是闭合的。当链接含有描述文字是显示描述文字而不是链接地址（见 4.1 节［链接格式］），
例如：
#+BEGIN_SRC org
[[http:www.gnu.org/software/emacs/][GNU Emacs]]
#+END_SRC

如果描述信息是一个文件名或者是指向图片的 URL。HTML 导出（见 12.4 节[HTML 导出]）时会将图片内联成一个
可以点击的按钮。如果没有描述信息且链接指向一个图片，那么图片就会嵌入到导出的 HTML 文件中。

** 目标链接
文件链接可以包含一些其他信息使得进入链接时可以到达特定的位置。比如双冒号之后的一个行号或者搜索选项。

下面是一些包含搜索定位功能的链接例子以及其说明：

file:~/code/main.c::255                     进入到 255 行
file:~/xx.org::My Target                    找到目标‘<<My Target>>’
file:~/xx.org/::#my-custom-id               查找自定义 id 的项

** 使用链接
Org 提供了以下方法来创建和使用链接。

| key          | 作用                                                      |
|--------------+-----------------------------------------------------------|
| C-c l        | 在当前位置保存一个链接。                                  |
|              | 这是一个全局命令，可以在任何类型的缓冲区中使用。          |
|              | 链接保存下来以便以后插入 Org 文件中（见下面）             |
| C-c C-l      | 插入一个链接。它会让你输入，你可以输入一个链接，          |
|              | 也可心用上/下键来获取保存的链接。它还会让你输入描述信息。 |
| C-c C-l      | 当光标处于链接上时，你可以修改链接                        |
| C-c C-o      |                                                           |
| 或者 mouse-1 |                                                           |
| 或者 mouse-2 | 打开链接，使用这个命令多次可以一直往前定位。              |
| C-c &        | 跳回到一个已记录的地址。                                  |
| C-c %        | 用可以将地址记录下来；                                    |
|              | 内部链接后面的命令也会自动将地址记录下来。                |

* 待办事项（TODO）
TODO 是 org-mode 最具特色的一个功能，也是 org-mode 设计的初衷，org-mode 的作者本意是用其来完成一个
个人时间管理程序（GDT）。
Org 模式并不用一个单独的文件来维持 TODO 列表。它是一些笔记的集合体，因为 TODO 列表是在你记录笔记的
过程中逐渐形成的。你 Org 模式下可以很容易地将树中的一项标记为一个 TODO 的项。用这种方式，信息内容
不会冗余加倍，而且可以显示 TODO 项的上下文环境。

** 使用 TODO 状态
当标题以 TODO 标识时它就成为了一个 TODO 项。
下面是一些使用 TODO 项的常用命令：

改变 TODO 的状态会触发标签改变。查看选项 org-todo-state-tags-triggers 的描述获得更多信息。

| key          | 作用                                                    |
|--------------+---------------------------------------------------------|
| C-c C-t      | 变换 TODO 的状态                                        |
|              | 将当前项的状态在（unmarked）->TODO->DONE 之间循环切换， |
|              | 同样的切换也可以在时间轴（timeline）和议程（agenda）的  |
|              | 缓冲区（buffer）中用 t 键“远程”进行                     |
| S-right/left | 选择下一个/上一个 TODO 状态，与上面的循环方式相同       |
| C-c / t      | 以树的形式展示所有的 TODO                               |
| C-c a t      | 显示全局 TODO 列表。                                    |
|              | 从所有的议程文件中收集 TODO 项到一个缓冲区中            |
| C-c C-c      | 改变 checkbox 状态                                      |
| C-c ,        | 设置优先级                                              |
| M-S-RET      | 插入同级 TODO 标签                                      |

** 多状态工作流程
设置 emacs 配置

** 进度日志
*** 完成的项目
#+BEGIN_SRC emacs-lisp
;; 项目从一个 TODO（未完成）状态改变为一个 DONE（完成）状态时，记录时间戳
(setq org-log-done 'time)
;; 项目从一个 TODO（未完成）状态改变为一个 DONE（完成）状态时，作一个记录（note）
(setq org-log-done 'note)
#+END_SRC

*** 跟踪 TODO 状态变化
你可能想跟踪 TODO 状态的变化。可以只记录一个时间戳，也可以为变化作一个带时间戳的记录。记录会被插入到
标题之后形成列表。当有很多记录之后，你可能希望将记录取出放到抽屉里。通过定制变量 org-log-into-drawer
可以实现这个功能。对于状态记录，Org 可以实现基于每个状态关键字的设置。实现方法是在每个后的括号中指定
“！”（记录时间戳）或“@”（作一个记录）。例如：

#+TODO: TODO(t) WAIT(w@/!) | DONE(d!) CANCELED(c@)

将会设置 TODO 关键字和快速访问字母，以及当一个项目设为 DONE 时，会记录时间戳，当状态变为 WAIT 或
 CANCELED 时，会作一个记录。这个语法也适用于变量 org-todo-keywords。

** 优先级
如果你广泛地使用 Org 模式，这样你就会有大量的 TODO 项。给它们设定优先级就很有必要。可以在 TODO 项的
标题中加入一些标记（cookie）来设置它们的优先级，像这样：
#+BEGIN_SRC org
  #+BEGIN_EXAMPLE
  **** TODO [#A] Write letter to Sam Fortune
  #+END_EXAMPLE
#+END_SRC

Org 模式支持三个优先级别：’A‘、’B‘和’C‘。’A‘是最高级别，如不指定，’B‘是默认的。优先级只在议程中有用。

| key    | 作用                        |
|--------+-----------------------------|
| C-c ,  | 设置当前标题的优先级。      |
| S-UP   |                             |
| S-Down | 增加/减少当前标题的优先级。 |

** 任务细分
很多时候将一个大的任务分成几个的易于完成的小任务是明智的。你可以通过在 TODO 项目下新建一个大纲树，并在子树上标记子任务来实现这个功能。为了能对已经完成的任务有个大致的了解，你可以在标题的任何地方插入‘[/]’或者‘[%]’。当每个子任务的状态变化时，或者当你在标记上按 C-c C-c 时，这些标记状态也会随之更新。例如：

#+BEGIN_SRC org
  #+BEGIN_EXAMPLE
  * Organize Party [33%]
    ** TODO Call people [1/2]
       *** TODO Peter
       *** DONE Sarah
    ** TODO Buy food
    ** DONE Talk to neighbor
  #+END_EXAMPLE
#+END_SRC

** 复选框
当纯文本中的项以'[]'开头时，就会变成一个复选框。复选框不会包含在全局 TODO 列表中，所以它们很适合将
一个任务划分成几个简单的步骤。下面是一个复选框的例子：

#+BEGIN_SRC org
  #+BEGIN_EXAMPLE
  * TODO Organize party [1/3]
    - [-] call people [1/2]
      - [ ] Peter
      - [X] Sarah
    - [X] order food
    - [ ] think about what music to play
  #+END_EXAMPLE
#+END_SRC

复选框是分层工作的。所以如果一个复选框项目如果还有子复选框，触发子复选框将会使该复选框变化以反映出
一个、多个还是没有子复选框被选中。

下面是处理复选框的命令：

| key     | 作用                                                           |
|---------+----------------------------------------------------------------|
| C-c C-c | 触发复选框的状态或者（加上前缀）触发复选框的的存在状态。       |
| M-S-RET | 增加一个带有复选框的项。这只在光标处于纯文本列表项中才起使用。 |

* 标签 Tags
在 org-mode 中，可以给每一章节添加一个标签，我们可以通过树的结构来查看所有带标签的章节。
在每一节中，子标题的标签会继承父标题标签。

C-c C-q 为标题添加标签
C-c / m 生成带标签的树

* 时间
org-mode 可以利用 Emacs 的时间空间插入当前时间。

C-c . 插入时间

* 一些特殊文本格式
org-mode 的强大之处还在于它能到出成各种不同的格式。

#+BEGIN_SRC org
#+BEGIN_EXAMPLE
*bold*
/italic/
_underlined_
=code=
~verbatim~
+strike-through+
#+END_EXAMPLE
#+END_SRC

*bold*
/italic/
_underlined_
=code=
~verbatim~
+strike-through+

* 富文本导出
org-mode 除了可以直接插入源代码之外，可以直接求出运行结果。

* 插入源代码
C-c C-c 对当前代码块求值

* 关于导出
C-c C-e 选择相应的导出格式
