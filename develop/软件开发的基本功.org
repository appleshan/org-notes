#+TITLE: 软件开发的基本功

* 需求管理
沟通方式问题，需求描述的应该是领域问题，然后流程的各个专业角色进行专业内的领域
分析，最后各个领域的方案形成一套方案，视为整体需求；
现在的需求是各个角色（销售、产品、运营）指导研发做，是否能解决问题不知道，也无
法验证，故更好的方式是说清楚问题，你明确你要解决的问题，就提清楚了一半需求，然
后根据各个约束，例如时间和成本等因素综合成最终的需求；
所以别再提需求了，提问题更高效；有价值的问题是团队价值的最大提现，而不是做了多
少需求没有解决问题。

* 项目管理
项目管理的本质是什么，是管理项目的约束，项目约束有哪些，人、时间、生成资料、各
方利益，如果把关注点放在项目本身上，你就输了。

* 配置管理
再说配置管理。到底什么是配置管理？
其实配置管理落到根本上就是持续集成。有持续集成，你就有有效的配置管理；没有有效
的持续集成，就是没有配置管理，就是这么简单的事情。
没有持续集成，你可以说在纸面上有很多配置管理的流程，但真到了需要软件的时候你怎
么办？你只能依赖一个配置管理员来手工打包。越是你着急需要打包软件的时候，这个人
就越出错、越是打不出包来。好不容易打出来的包一测有问题，然后大家一起加班。所以
我说配置管理很简单，你有持续集成、每天可以有一个候选版本通过持续集成打出来，你
就有配置管理；出不来，你就没有配置管理。

那为了让持续集成有效，最后的一切都会落到重构和单元测试上面。是不是拥有高覆盖率
的、可靠的、运行快速的单元测试，这是一个决定性的分水岭。而高覆盖率的、可靠的、
运行快速的单元测试集，得到这个东西最有效的办法，就是测试驱动开发，就是你必须先
写测试、再写实现，你才可能得到这么一个有效的测试集。

所以，得到有效的单元测试集最直接的办法，叫做测试驱动开发。

* 质量保障
质量保障的是什么，保障实现和预期是否一致，谁的预期，需求预期和软件边界值管理两
个方面。边界值管理在一般的成熟测试中都有管理；需求定义模糊，预期就会差异巨大，
所以需求定义清晰是一个伟大的命题，就像我是谁、想去哪一样。

最后决定开发的质量和效率的是什么？是持续集成，是持续集成里面运行的测试集的效率
和质量。你可以得到一个高效率、高质量的测试集，你就能做好软件。没有高效率、高质
量的测试集，软件开发的效率和质量就不会好。

《敏捷宣言》第一句怎么说？人和交互重于流程和工具。但是搞敏捷的公司在做什么？十
几年了，一次一次想用流程和工具解决人和交互不行的问题。这个核心问题绕不开，没有
办法。
软件开发的质量和效率不行的问题，它就是一个人和交互的问题：“人”就是个人能力的问
题，“交互”就是团队能力的问题。人的能力和团队的能力不提升，基本功没有扎实，用什
么样的工具都解决不了这个问题。
