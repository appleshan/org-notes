纯净 DNS 解析

DNS 污染主要是两种，一是丢包，二是抢答，两种方式基本上无规律出现。做纯净 DNS 解析
基本上就是为了解决这两个问题，现在主流的方法大体有以下几种：

- 换 DNS 服务器。一般 ISP 会自动分配一个或两个 DNS 服务器，这种服务器对于国内或
  ISP 内网的 CDN 特别友好，但对国外的比如 Apple 的 CDN 就抓瞎了，所以有了 114，
  阿里，DNSPOD 之类的公共 DNS 服务器，针对用户常用的 Apple 等 CDN 做了优化，但它们
  不能解决 DNS 污染的问题，所以需要用 8888 之类国外的 DNS 来解决污染。
- 换端口。一些国外的知名 DNS 服务器树大招风了，标准的 DNS 使用 53 端口仍然会被污染，
  于是像 OpenDNS 之类一些公共 DNS 服务除了 53 端口外还在诸如 443，5353 等端口提供
  DNS 解析服务，有些 ISP 还没针对非标准端口进行污染，但操作系统对 DNS 解析的操作仅
  支持标准的 53 端口，所以需要额外的软件把请求端口从 53 转发过来。
- 换协议。操作系统在进行 DNS 解析时使用的是 UDP 协议，但现在有一些公共 DNS 服务器，
  比如 8888，OpenDNS 等提供了 TCP 之类的传输协议进行解析，除此之外还有 TCP-TLS，也
  是个标准化的协议，但我是没见到过有哪家公共 DNS 服务器支持了，还有 DNSCrypt，是
  OpenDNS 在 TCP 之上实现的一种加密传输协议。跟换端口一样，为了让操作系统能够使用，
  所以也需要额外的软件实现协议。
- 代理。DNS 解析本身也是一次数据传输，DNS 污染就是对数据传输进行了阻碍和修改，所以
  代理就是让 DNS 协议走在一条相对可靠的传输线路上，除了可以直接对 DNS 协议本身即
  UDP 代理，还可以通过 DNS over VPN 之类的方式代理，比如 shadowsocks-libev 版有一个
  ss-tunnel 工具，可以把远端主机的端口映射到本地的端口，如果把 8888 的 53 端口映射到
  本地 53 端口，那么相当于开通了一条走 shadowsocks 协议的 DNS 代理。

有了纯净 DNS，基本上浏览被墙网站是没问题了。不过功能实现后，就该考虑优化了，因为
上面提到的方法最后都是让国外的 DNS 服务器进行最终的解析，所以对国内的 CDN 基本无解。
现在常用的方法基本上是分流解析，国内域名让国内 DNS 服务器解析，国外域名让国外 DNS
服务器解析，细微的差别就在于如何判断出一个域名需要让哪边的 DNS 服务器解析。

- ChinaDNS 基本上停更了，最早的版本是维护了一个 IP 黑名单，这是基于这么一个假设，即
  GFW 抢答给出的 IP 属于一个并不大的集合，于是只要收到了黑名单中的 IP 时，就走纯净
  DNS 解析。后来的版本改成同时向国内外的 DNS 服务器请求，如果得的 IP 是国外的，则取
  纯净 DNS 解析结果，否则取国内 DNS 解析结果。这是基于这么一个假设，国外的 DNS 解析
  结果总是纯净的，并且总是比国内的 DNS 解析结果晚到。
- PCap_DNSProxy，28 小朋友至今一直在积极更新，用 C++开发，依赖 libpcap/Winpcap，从
  驱动层抓捕到 DNS 解析返回的 UDP 包，把 GFW 抢答的包丢弃，以此来获得纯净 DNS 解
  析结果。实际上如何辨别出一个 DNS 应答包是抢答的是件很费神的事，28 小朋友对此也
  有点诲莫如深。除此之外它还有一系列跟 DNS 解析相关的功能，比如 CNAME hosts 之类的。
- dnsmasq+china domain list。我觉得这是最 unix-like style 的方案，作者 Felix Yan 也
  是 Archlinux 的开发者，维护了一个包含几千个域名的国内网站域名列表，配合 dnsmasq，
  可以让这些域名走国内的 DNS 服务器解析，其他域名默认走纯净 DNS 解析。

[[https://blog.minidump.info/2016/03/avege-dns-improve/][avege的方案]]基本上糅合了以上几种方案中简单又有效的部分，目前基本工作正常。唯一比
较遗憾的是没有直接支持DNSCrypt。
