#+TITLE: manjaro 安装好之后的配置

* 如何更换和添加源

软件仓库（在 Debian 系发行版中，又叫做“软件源”）是软件包存储的地方。通常我们所说的软件仓库指在线软件仓库，亦即用户从互联网获取软件的地方。

** 手动选择软件仓库镜像
@see https://blog.yoitsu.moe/arch-linux/installing_arch_linux_for_complete_newbies.html
用 nano 打开 /etc/pacman.d/mirrorlist

sudo nano /etc/pacman.d/mirrorlist

最简单的方法还是把下面那些 Mirrors 先全删掉然后输入一个新的，用光标指向某一行以后同时按下 Ctrl+K 就好。
然后自己输入一个 Mirror，下面给出几个中国国内的 Mirror：

## Country : China - Hong_Kong
Server = http://ftp.cuhk.edu.hk/pub/Linux/manjaro/stable/$repo/$arch

## 浙江大学 (浙江杭州) (ipv4, ipv6, http, https)
## Added: 2017-06-05
Server = https://mirrors.zju.edu.cn/manjaro/stable/$repo/$arch

## 清华大学 (ipv4, ipv6, http, https)
Server = https://mirrors.tuna.tsinghua.edu.cn/manjaro/stable/$repo/$arch

## Country : China
Server = https://mirrors.shuosc.org/manjaro/stable/$repo/$arch

## Country : China
Server = https://mirrors.shu.edu.cn/manjaro/stable/$repo/$arch

## 中国科学技术大学 (ipv4, ipv6, http, https)
Server = https://mirrors.ustc.edu.cn/manjaro/stable/$repo/$arch

## Country : Japan
Server = http://ftp.riken.jp/Linux/manjaro/stable/$repo/$arch

## Country : Japan
Server = http://ftp.tsukuba.wide.ad.jp/Linux/manjaro/stable/$repo/$arch

## Country : Singapore
Server = https://download.nus.edu.sg/mirror/manjaro/stable/$repo/$arch

** 安装 yaourt
sudo pacman -S yaourt

AUR 镜像:
修改 /etc/yaourtrc，去掉 # AURURL 的注释，修改为

AURURL="https://aur.tuna.tsinghua.edu.cn"

** 安装 axel
sudo pacman -S axel

** 加速 pacman
都知道 pacman 能够调用外部下载工具来代替默认的 wget 来给 pacman 提速
比如将 /etc/pacman.conf 中

XferCommand = /usr/bin/wget –passive-ftp -c -O %o %u

注释掉,同时添加

XferCommand = /usr/bin/axel -n5 -o %o %u

即可使用axel多线程下载工具

** 加速 yaourt
而要让yaourt也支持多线程,只需修改 /etc/makepkg.conf

将
’http::/usr/bin/wget -c -t 3 –waitretry=3 -O %o %u’
改成了
’http::/usr/bin/axel -n5 -o %o %u’

** ArchlinuxCN 镜像
@See https://github.com/archlinuxcn/repo

Arch Linux 中文社区仓库 是由 Arch Linux 中文社区驱动的非官方用户仓库。包含中文用户常用软件、工具、字体/美化包等。

完整的包信息列表（包名称/架构/维护者/状态）请 点击这里 查看。

 官方仓库地址：http://repo.archlinuxcn.org
 镜像地址: https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/
使用方法：在 /etc/pacman.conf 文件末尾添加以下两行：

[archlinuxcn]
Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch

** pacman 设置后更刷新一下软件包数据库
然后用 pacman -Syy 刷新一下软件包数据库。

root@archiso ~ # pacman -Syy
:: Synchronizing package databases...
core                                  120.9 KiB  4.92M/s 00:00 [##################################] 100%
extra                                1755.6 KiB  5.24M/s 00:00 [##################################] 100%
community                               3.7 MiB  6.82M/s 00:01 [##################################] 100%
root@archiso ~ #

** 安装 archlinuxcn-keyring 包导入 GPG key
sudo pacman -S archlinuxcn-keyring

* 安装后更新系统

在终端输入以下命令更新系统

sudo pacman -Syu


* 在 Manjaro 中安装卸载软件：
（1）在设置里找到添加/删除软件，打开：
[./images/install-software.jpg]

这是 xfce 下软件管理器，kde 下有点不同，但大同小异。你可以在左上搜索框中输入要搜索的软件，
勾选并应用就可以安装，还可以启用 AUR 搜索，如图：
[./images/install-software-2.jpg]

（2）通过命令安装/卸载软件：
安装软件命令（package_name 即是指软件名字，如 firefox）：
pacman -S package_name

卸载软件命令：
pacre package_name

卸载软件＋不需要的依赖（类似 sudo apt autoremove）：
sudo pacman -Rs package_name


* 设置基本系统

** 基本中文支持
@See https://wiki.archlinux.org/index.php/Arch_Linux_Localization_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

*** /etc/locale.gen
是一个仅包含注释文档的文本文件。指定您需要的本地化类型，去掉对应行前面的注释符号（＃）就可以啦，
还是用 nano 打开，建议选择帶 UTF-8 的項：
# nano /etc/locale.gen

en_US.UTF-8 UTF-8
zh_CN.UTF-8 UTF-8

*** 执行 locale-gen 以生成 locale 讯息：
# locale-gen

Generating locales...
  en_US.UTF-8... done
  zh_CN.UTF-8... done
  zh_HK.UTF-8... done
  zh_TW.UTF-8... done
Generation complete.

*** /etc/locale.conf
将系统 locale 设置为 en_US.UTF-8，系统的 Log 就会用英文显示，这样更容易问题的判断和处理。用户可以设置自己的 locale。
警告: 不推荐在此设置任何中文 locale，或导致 tty 乱码。
用文字编辑器 zai 这个文件 zhon 加上这一行。

LANG=en_US.UTF-8

or:

# 或者可以用文字编辑器新建这个文件加上这一行。
echo LANG=en_US.UTF-8 > /etc/locale.conf

*** 安装中文字体

- Google Noto Fonts 系列：noto-fonts noto-fonts-cjk noto-fonts-emoji
- 思源黑体：adobe-source-han-sans-otc-fonts (adobe-source-han-sans-cn-fonts , adobe-source-han-sans-tw-fonts)
- 文泉驿：wqy-microhei wqy-zenhei

更多的字体可以在 https://wiki.archlinux.org/index.php/Fonts_(简体中文) 找到。

pacman -S ttf-hack
pacman -S wqy-zenhei wqy-microhei

# adobe 字体全家桶：
pacman -S adobe-source-code-pro-fonts
pacman -S adobe-source-sans-pro-fonts
pacman -S adobe-source-serif-pro-fonts
pacman -S adobe-source-han-sans-cn-fonts
pacman -S adobe-source-han-serif-cn-fonts

*** 字体显示效果
设置好源和驱动以后我们还要折腾两个东西，首先是字体显示效果：
如果你使用的是 xfce 版，那么先在设置—外观里调整到像这样：
[./images/appearance.jpg]

简单说就是开启抗锯齿，显示调整为略微，次像素 RGB。我用的谷歌思源黑体，想用这个字体可以输入
sudo pacman -S noto-fonts-cjk
进行安装，再在字体里选用。

接下来还要做一些微小的工作提升字体显示效果：
（1）新建文件：/etc/fonts/local.conf
sudo nano /etc/fonts/local.conf
把以下代码黏贴到文件里：
<match target="font">
    <edit name="autohint" mode="assign">
        <bool>true</bool>
    </edit>
    <edit name="hinting" mode="assign">
        <bool>true</bool>
    </edit>
    <edit mode="assign" name="hintstyle">
        <const>hintslight</const>
    </edit>
    <edit mode="assign" name="lcdfilter">
        <const>lcddefault</const>
    </edit>
</match>

然后 Ctrl+X 保存并退出。

（2）.Xresources 文件
打开/新建 ~/.Xresources 文件：
nano ~/.Xresources
删除文件里原有内容（如果有的话），把以下代码黏贴进去：

Xft.dpi: 96
Xft.antialias: true
Xft.hinting: true
Xft.rgba: rgb
Xft.autohint: false
Xft.hintstyle: hintslight
Xft.lcdfilter: lcddefault

然后 Ctrl+X 保存文件并退出。
（3）在终端运行以下命令：xrdb -merge ~/.Xresources
（4）请确保在字体设置里开启抗锯齿，显示调整为略微，次像素 RGB。
（5）重启系统，你就会看到效果了。

*** 安装中文输入法
**** fcitx
@See https://wiki.archlinux.org/index.php/fcitx#Chinese

以安装 rime 为例

pacman -S fcitx-rime
pacman -S fcitx-im
pacman -S fcitx-configtool # 图形化的配置工具

保存成功后，注销重新登陆系统，在终端输入 fcitx 启动服务，就能切换 rime 了。

**** fcitx5
$ sudo pacman -S fcitx5-git # 安装fcitx5框架
$ sudo pacman -S fcitx5-gtk-git # 增加对gtk程序的支持
$ sudo pacman -S fcitx5-qt5-git # 增加对QT5程序的支持，有QT4程序的话请自己安装fcitx5-qt4-git
$ sudo pacman -S fcitx5-chinese-addons-git # 增加对中文输入的组件
$ sudo pacman -S fcitx5-rime-git
$ sudo pacman -S kcm-fcitx5-git # 增加内嵌的输入设置，只限KDE

** 设置时区（中国的时区是 Asia/Shanghai）
# ln -s <源文件> <目标> 创建一个符号链接

# ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

** 设置时间标准 为 UTC，并调整 时间漂移:
# hwclock --systohc
[Fail]

** 时间同步

用 timedatectl set-ntp true 保证时间同步 。

root@archiso ~ # timedatectl set-ntp true
root@archiso ~ # timedatectl status
    Local time: Fri 2016-10-28 17:39:42 UTC
Universal time: Fri 2016-10-28 17:39:42 UTC
        RTC time: Fri 2016-10-28 17:39:42
    Time zone: UTC (UTC, +0000)
Network time on: yes
NTP synchronized: yes
RTC in local TZ: no

** 设置一个喜欢的主机名（用汝的主机名代替 myhostname）：
# echo myhostname > /etc/hostname

** 设置 root 的密码（输入密码的时候就是啥也没有 ╮(￣▽￣)╭ ）：
[root@archiso /]# passwd
New password:
Retype new password:
passwd: password updated successfully


* 安装 zsh，及 oh-my-zsh 的配置

** 安装 zsh
# 最新版本已经默认安装了。
sudo pacman -S zsh

** 安装 oh-my-zsh
# 安装 oh-my-zsh
sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

# 更换默认的 shell
chsh -s $(which zsh)

# 查看当前 shell
echo $SHELL

# 查看本地有哪几种 shell
cat /etc/shells

# 开启 archlinux 插件
plugins=(archlinux)

** 安装 zsh theme

*** spaceship
mkdir $ZSH_CUSTOM/themes
git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"

# 更换默认的 shell 提示符
# random bira blinks fino gnzh rkj-repos tjkirch xiong-chiamiov-plus ys spaceship
ZSH_THEME="spaceship-prompt/spaceship"

*** powerlevel9k
mkdir $ZSH_CUSTOM/themes
git clone https://github.com/bhilburn/powerlevel9k.git "$ZSH_CUSTOM/themes/powerlevel9k"

# 更换默认的 shell 提示符
ZSH_THEME="powerlevel9k/powerlevel9k"

* 安装 theme
https://github.com/horst3180/Arc-theme
pacman -S arc-gtk-theme

* 安装驱动程序

** Intel CPU 安装 Intel-ucode
@See https://wiki.archlinux.org/index.php/Microcode

非 IntelCPU 可以跳过此步骤。
直接 pacman 安装：

pacman -S intel-ucode

** 显卡驱动
Archlinux 中的显卡驱动都是以 xf86-video 开头的。

Archlinux 中列出所有的 PCI 设备：
$ lspci

查询显卡类型：
$ lspci | grep VGA

查询可用的开源驱动：
$ pacman -Ss xf86-video | less

发现 xf86-video-intel 是 Intel 显卡的驱动，安装之。

- 物理机安装 Intel 核心显卡驱动（intel）：
$ pacman -S xf86-video-intel

- 虚拟机安装通用驱动（vesa）：
$ pacman -S xf86-video-vesa
支持硬件加速的驱动程序可以在安装 X 时自动提示你安装，只需要选择正确的显卡类型，不需要显式安装。

- 安装显示驱动程序包
@see https://hyjk2000.github.io/2014/01/23/arch-linux-install-guide/
如果是在 VMware 中安装的 linux，就安装专门用于虚拟机的 xf86-video-vmware 驱动程序：
$ pacman -S xf86-video-vmware svga-dri

*** 配置双屏
@See http://blog.ggshiney.com/posts/2012/11/14/config-dual-monitor-for-archlinux.html

显卡驱动就绪后两个显示器显示相同，如果需要扩展显示桌面，还需要进行一番配置。

randr(X Resize, Rotate and Reflect Extension)可以控制桌面的显示输出效果，如镜像、旋转等。xrandr 是 randr 的命令行接口。
安装 xrandr
$ pacman -S xorg-xrandr

首先查看当前显示状态，列出目前環境支援的解析度和頻率：
xrandr -q

看到我的两个显示器对应着 DP1 和 DP3，接下来设置两个显示器位置：
xrandr --output DP1 --auto --output DP3 --auto --right-of DP1

*** 自动启动
可以把通过这条命令预览好的位置，加入配置文件 /etc/X11/xorg.conf.d/10-monitor.conf，以实现自动启动。

Section "Monitor"
    Identifier  "DP3"
    Option      "Primary" "true"
EndSection

Section "Monitor"
    Identifier  "DP1"
    Option      "LeftOf" "DP3"
EndSection

** 声卡驱动
通常不需要配置就能工作，只需解除静音。需要做的只是安装 alsa-utils 软件包：

pacman -S alsa-utils

** 安装 VMware Tools
在 VMware 中选择“安装 VMware Tools”，然后：

$ pacman -S linux-headers
$ for x in {0..6}; do mkdir -pv /etc/init.d/rc$x.d; done
$ mount /dev/cdrom /mnt
$ cd /root
$ tar zxf /mnt/VMwareTools*.tar.gz
$ cd vmware-tools-distrib
$ ./vmware-install.pl
按提示一步步进行，如果最后报错，一般也不用担心，重启后 VMware Tools 能正确启动。

* 其他美化

** 修改 LightDM 的背景图片
将需要的图片copy为文件：/usr/share/backgrounds/archlinux.jpg 。
打开 /etc/lightdm/slick-greeter.conf 文件，找到：
background=/usr/share/backgrounds/i3_default_background.jpg
修改为：
background=/usr/share/backgrounds/archlinux.jpg

** 设置 pacman 彩色输出
打开 /etc/pacman.conf 文件，找到被注释的 #Color，改为 Color。pacman 就会输出彩色信息，方便查看。

** themes

*** vinceliuice/WhiteSur-icon-theme
https://github.com/vinceliuice/WhiteSur-icon-theme

*** vinceliuice/WhiteSur-cursors
https://github.com/vinceliuice/WhiteSur-cursors

*** vinceliuice/McMojave-circle
https://github.com/vinceliuice/McMojave-circle

*** vinceliuice/Qogir-icon-theme
https://github.com/vinceliuice/Qogir-icon-theme

*** keeferrourke/la-capitaine-icon-theme
https://github.com/keeferrourke/la-capitaine-icon-theme

*** hosxy/Fcitx5-Material-Color
https://github.com/hosxy/Fcitx5-Material-Color

*** xTpx/Psionics-Remix
https://github.com/xTpx/Psionics-Remix

* 安装 i3 wm

** 安装字体图标
yay -S ttf-font-awesome
yay -S ttf-material-icons

** 安装 i3-gaps
pacman -S i3-gaps

** 安装 compton
pacman -S compton

** 安装 polybar
yay -S polybar-git

** 安装 feh
pacman -S feh

** 安装 i3lock-fancy
yay -S i3lock-fancy-git

* 安装一些工具

** 安装ranger
pacman -S ranger

** 安装vifm
pacman -S vifm

** U盘自动挂载
pacman -S udisks2 gvfs gvfs-mtp

** 文件管理器
thunar-archive-plugin # thunar 用于压缩解压缩的插件
thunar-volman # 管理 usb 自动挂载等
thunar # 文件管理器

** linux tool
pacman -S vi
pacman -S w3m
pacman -S wget
pacman -S axel
pacman -S tmux

pacman -S screenfetch
pacman -S shadowsocks-qt5

pacman -S cloc
pacman -S jq
pacman -S tig
pacman -S shellcheck

** full text search
pacman -S ripgrep
pacman -S the_silver_searcher

** linux-headers
pacman -S linux-headers

** inotify-tools
pacman -S inotify-tools

** net tools
ifconfig, route 在 net-tools 中，
nslookup, dig 在 dnsutils or bind-tools 中，
ftp, telnet 等在 inetutils 中,
ip 命令在 iproute2 中。

pacman -S net-tools dnsutils inetutils iproute2

** google-chrome
在上一步安装了 yaourt 之后，就可以安装 google-chrome 了
yaourt -S google-chrome

** 下载代理插件 Proxy SwitchyOmega
chrome 扩展商店的地址在这里：
https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif

同样提供另外的地址：
http://pan.baidu.com/s/1slrU97B

** shadowsocks-libev
@See https://github.com/madeye/shadowsocks-libev#usage
sudo pacman -S shadowsocks-libev

** Sublime text 3

/opt/text/sublime_text_3

ln -s /opt/text/sublime_text_3/sublime_text /usr/local/bin/sublime_text

** emacs 25.3
@See build-emacs.sh

** 截图
yay flameshot-git

** meld
pacman -S meld

** percol
pacman -S percol

** 远程桌面连接 windows

*** remmina
pacman -S remmina

*** rdesktop
pacman -S rdesktop

rdesktop 连接 windows 远程桌面
打开命令行，仅需要一条命令：
rdesktop -f -u username -p password IP -r sound:on/off -g 1024*768

说明：
1、username 和 password 分别是目标电脑的帐号和密码，-a 16 表示位色，最高就是 16 位；
2、IP 为目标电脑的 IP 地址（可能需要先连接 VPN）；
3、sound：on 表示传送目标电脑的声音，off 则为关闭；
4、-g 后接想要显示的分辨率，使用 -g workarea 可自适应铺满当前 linux 窗口大小
5、-f 参数默认全屏打开，使用 Ctrl + Alt + Enter 可以退出全屏模式（不知道的就郁闷了）。
6、-r** disk:share_name=/local-disk** 将本地磁盘映射到远程电脑，其中 share_name 为显示名称，可自定义，local-disk 表示本地 linux 的一个目录，比如 /data。
7、-r clipboard:PRIMARYCLIPBOARD 允许在远程主机和本机之间共享剪切板，就是可以复制粘贴。

比如如下命令：

$ rdesktop -f -u administrator -p ncl@2017.com 192.168.2.160
这里的 ip 对应远程 windows 的 ip 地址

如果不想每次都敲命令的，可以简单的写个 shell 脚本，每次点击就可以连接。

** Tencent QQ
提供在 Linux 上运行最新版腾讯 QQ 与 TIM 的解决方案：
https://github.com/askme765cs/Wine-QQ-TIM

** 虚拟机
有些时候需要使用 windows 而不想切换系统或干脆没有 windows 的情况下，我们可以使用 windows 虚拟机来代替。当然虚拟机的用处不止于此。

Arch 下的虚拟机首先开源的 VirtualBox，安装官方源的 virtualbox 这个包。

再去官网下载 Oracle VM VirtualBox Extension Pack，在设置中导入使用。
安装 windows 的过程不在这里讲解，记得安装之后在 windows 内安装扩展客户端软件即可。

$ sudo pacman -S linux-headers
$ sudo pacman -S virtualbox virtualbox-guest-iso virtualbox-guest-dkms virtualbox-guest-utils virtualbox-host-dkms

將電腦重開機
$ sudo dkms autoinstall
$ sudo systemctl enable dkms.service
$ sudo systemctl enable vboxservice.service
$ sudo gpasswd -a $USER vboxusers

將電腦重開機
$ sudo VBoxManage hostonlyif create

** gnu parallel
使用 gnu parallel 的目的只要一个，就是为了快！

安装:

(wget -O - pi.dk/3 || curl pi.dk/3/) | bash

** tldr
mkdir -p ~/bin
curl -o ~/bin/tldr https://raw.githubusercontent.com/raylee/tldr/master/tldr
chmod +x ~/bin/tldr

** docker
可以透過官方套件庫安裝 docker 套件：
# pacman -S docker

啟動 docker.service 並驗證安裝是否成功：

# systemctl start docker.service
# docker info

To start on system boot:

# systemctl enable docker

如果你想用你的使用者帳戶(非 root 帳戶)來使用 Docker，把你的帳戶加到 Docker 的群組中：

# gpasswd -a alecshan docker

記得重新登入來套用新權限，或者你可以用這個指令讓現在的使用者階段套用新群組：

$ newgrp docker

** unbound
pacman -S unbound

** dnscrypt-proxy
@See:
https://wiki.archlinux.org/index.php/DNSCrypt
https://github.com/jedisct1/dnscrypt-proxy/wiki/installation#installing-dnscrypt-proxy-on-arch-linux-as-a-system-service

1. Install it with :

yaourt -S dnscrypt-proxy-go

2. Activate & Start the service:

systemctl enable dnscrypt-proxy.service
systemctl start dnscrypt-proxy.service

3. Check successful service start:

systemctl status dnscrypt-proxy.service

And look for the Log Line

dnscrypt-proxy is ready - live servers:
dnscrypt-proxy is now listening on 127.0.0.1:53

** wine
sudo pacman -S wine q4wine playonlinux

** 安裝影音播放軟體
$ sudo pacman -S audacious smplayer smplayer-themes vlc

** python tool
pip install --user pipenv

sudo pip install ipython
sudo pip install ptpython
sudo pip install pythonpy
sudo pip install pygments
sudo pip install ansible
sudo pip install percol
sudo pip install rm-protection


* 一些优化

** SATA 启用 AHCI 模式

SATA 有两种工作模式：原生的 AHCI 模式提供更好的性能（如热插拔和 NCQ 支持）、模拟的 IDE 模式提供
更好的兼容性。一般主板出厂默认将 SATA 模式设置为 IDE 模式，但如今先进的 Linux 和 Windows 都
早已原生支持 AHCI，所以我们最好打开 AHCI 模式以优化性能。

Arch Linux 在安装好以后，内核镜像默认没有载入 AHCI 驱动模块。修改 /etc/mkinitcpio.conf，
添加 ahci 到 MODULES 变量：

MODULES="ahci"
然后重建内核镜像，重新启动后 AHCI 驱动就会加载：

$ mkinitcpio -p linux
在主板 UEFI 或 BIOS 中，将 SATA 模式从 IDE（或 PATA Emulation 等等），设置为 AHCI（或 Native 等等）。

设置好以后，你可以从 dmesg 命令的输出里，找到 AHCI 和 NCQ 成功启用的证据：

$ dmesg
...
SCSI subsystem initialized
libata version 3.00 loaded.
ahci 0000:00:1f.2: version 3.0
ahci 0000:00:1f.2: irq 24 for MSI/MSI-X
ahci 0000:00:1f.2: AHCI 0001.0300 32 slots 6 ports 6 Gbps 0x10 impl SATA mode
ahci 0000:00:1f.2: flags: 64bit ncq led clo pio slum part ems apst
scsi host0: ahci
scsi host1: ahci
scsi host2: ahci
scsi host3: ahci
scsi host4: ahci
scsi host5: ahci
...
ata5.00: 976773168 sectors, multi 16: LBA48 NCQ (depth 31/32), AA
...

** 优化系统启动速度

Arch Linux 的 systemd-analyze 是个很不错的工具，利用它你可以很直观地观察到系统启动的时间都花到哪儿去了：

$ systemd-analyze
Startup finished in 6.857s (firmware) + 3.157s (loader) + 1.870s (kernel) + 8.157s (userspace) = 20.044s
我注意到打开 AHCI 后，内核和用户空间的载入速度明显提高了，总启动时间从约 30 秒缩短到 20 秒，效果非常明显。

用下面这个命令，可以了解到是什么东西启动最慢：

$ systemd-analyze blame
此外，还可以把启动过程绘制成 SVG 图表供你审阅（用 GNOME 的图片预览或 Chrome 浏览器都可以打开），这个图表中你还可以观察到是否有启动慢的组件影响到了依赖它的组件的启动：

$ systemd-analyze plot > plot.svg

