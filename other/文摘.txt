
我无法反抗墙，
只有反抗的愿望。
我首先必须反抗的是：
我对墙的妥协，
和对这个世界的不安全感。
—— 舒婷：《墙》，1980年


达芬奇说过一句话：“Simplicity is the ultimate form of sophistication（简洁是终极的复杂）”。


海明威每天写作之前都会把前一天的稿再改一次。


菜的意思不就是这两点么：表达不清楚自己所看到的，以及无法针对性地回答别人的问题。


Linux is for people who want to know why it works.
Mac is for people who don't want to know why it works.
DOS is for people who want to know why it does not work.
Windows is for people who don't want to know why it does not work.
Linux 适用于想知道它为什么起作用的人。
Mac 适用于不想知道它为什么起作用的人。
DOS 适用于想知道为什么它不起作用的人。
Windows 适用于不想知道为什么它不起作用的人。


《代码大全》里面很重要的一句话大概是这样的（原话不太记得了）“软件开发中的首要目标就是降低复杂性”。
而复杂性来源于哪里？一、重复代码；二、糟糕的命名。


Kent Beck 的简单设计原则：
- 通过所有测试（ Passes its tests ）
- 尽可能消除重复 (Minimizes duplication)
- 尽可能清晰表达 (Maximizes clarity)
- 更少代码元素 (Has fewer elements)
以上四个原则的重要程度依次降低.


今天在学习一篇小册，里面有一句话引起了我的共鸣，在计算机的世界，如果有解决不了的问题，那就加一个中间层。


创造是一种乐趣，学习如何创造同样也是一种很大的乐趣。


有问题别随便问，再仔细想想，自己把它想通！实在想不通，再问。


在软件工程领域「银弹」一词的隐喻是「这东西看上去很好，但没有（或者不能）解决实际问题」，更深地隐喻是「这个问题本身无解，所有提出的解基本上非坏即蠢」


大家对于 了解/熟悉/掌握/精通 某项技术是怎么理解的呢？
了解：听过，并且可能安装预言过，比如安装过某个包，看过 README.md
熟悉：能独立完成这项技术相关的普通工作
掌握：能帮助别人完成这项技术的相关工作，比如 debug 一些疑难杂症
精通：相关原理、源码了解得透透的，没有解决不了的问题，如果有，大概率是作者也不好解决的那种
